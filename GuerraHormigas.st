Object subclass: #Alimento	instanceVariableNames: 'cantidad'	classVariableNames: ''	poolDictionaries: ''	category: 'GuerraHormigas'!!Alimento commentStamp: 'Infante 6/7/2017 17:16' prior: 0!ALIMENTO CLASSAlimento knows his quantity of food available (cantidad variable). There's a message related to communication with Guerrera and Obrera classes. Also the basic getter method (hayComida) and a specific setter method which decreases the amount of food by unConsumo.!!Alimento methodsFor: 'as yet unclassified' stamp: 'Infante 6/7/2017 16:32'!hayComida	"comment stating purpose of message"	^(cantidad > 0).! !!Alimento methodsFor: 'as yet unclassified' stamp: 'Infante 6/7/2017 15:18'!ingresarComida: unaCant	"comment stating purpose of message"	cantidad := cantidad + unaCant.! !!Alimento methodsFor: 'as yet unclassified' stamp: 'Infante 6/5/2017 14:51'!seComio: unConsumo	"comment stating purpose of message"	cantidad := cantidad - unConsumo.! !!Alimento methodsFor: 'as yet unclassified' stamp: 'Infante 6/7/2017 16:20'!inicializar: unaCant	"comment stating purpose of message"	cantidad := unaCant.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Alimento class	instanceVariableNames: ''!!Alimento class methodsFor: 'as yet unclassified' stamp: 'Infante 6/7/2017 16:19'!crearBotin	"comment stating purpose of message"	|botin|	botin := Alimento new.	botin inicializar.	^botin.! !!Alimento class methodsFor: 'as yet unclassified' stamp: 'Infante 6/7/2017 16:19'!crearAlimento: unaCantidad	"comment stating purpose of message"	| alimento |	alimento := Alimento new.	alimento inicializar: unaCantidad.	^alimento.! !Object subclass: #Casilla	instanceVariableNames: 'numeroCasilla unaPosicion colObjectos'	classVariableNames: ''	poolDictionaries: ''	category: 'GuerraHormigas'!!Casilla methodsFor: 'getters' stamp: 'Infante 6/5/2017 18:29'!getPosicion	"comment stating purpose of message"	^unaPosicion.! !!Casilla methodsFor: 'contructor' stamp: 'Infante 6/5/2017 18:26'!inicializar: unaPoscolObjectos := OrderedCollection new.unaPosicion := unaPos. ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Casilla class	instanceVariableNames: ''!!Casilla class methodsFor: 'as yet unclassified' stamp: 'Infante 6/5/2017 18:28'!crear: unaPos	|casilla|	casilla := Casilla new.	casilla inicializar: unaPos.	^casilla.! !Object subclass: #Colonia	instanceVariableNames: 'colHormiga nombreColonia unBotin miMundo'	classVariableNames: ''	poolDictionaries: ''	category: 'GuerraHormigas'!!Colonia methodsFor: 'as yet unclassified' stamp: 'Infante 6/7/2017 15:22'!informarHormiguero: encontroHormiguero comida: encontroComida camino: listaCamino	"comment stating purpose of message"	(encontroComida) ifTrue: [self mandarObreras:listaCamino.] 						ifFalse: [ self mandarGuerreras:listaCamino. ]. ! !!Colonia methodsFor: 'as yet unclassified' stamp: 'Infante 6/7/2017 15:49'!buscarGuerreraDisponible	"comment stating purpose of message"	^colHormiga detect: [ :elem | elem esGuerrera. ].! !!Colonia methodsFor: 'as yet unclassified' stamp: 'Infante 6/7/2017 15:49'!buscarReina	"comment stating purpose of message"	^colHormiga detect: [ :elem | elem esReina. ].! !!Colonia methodsFor: 'as yet unclassified' stamp: 'Infante 6/7/2017 15:22'!mandarObreras: listaCamino	"comment stating purpose of message"	! !!Colonia methodsFor: 'as yet unclassified' stamp: 'Infante 6/5/2017 14:59'!eliminarHormiga: unaHormiga	"comment stating purpose of message"		colHormiga remove: unaHormiga.	! !!Colonia methodsFor: 'as yet unclassified' stamp: 'Infante 6/7/2017 15:17'!depositarComida: unaCant	"comment stating purpose of message"	unBotin ingresarComida: unaCant.	! !!Colonia methodsFor: 'as yet unclassified' stamp: 'Infante 6/7/2017 15:23'!mandarGuerreras: listaCamino	"comment stating purpose of message"	! !!Colonia methodsFor: 'as yet unclassified' stamp: 'Infante 6/7/2017 15:47'!defender: unaHormigaAtacante	"comment stating purpose of message" 	|unaGuerrera unaReina temp |		unaGuerrera := self buscarGuerreraDisponible.		(unaGuerrera) ifNil: [ unaReina := self buscarReina. 				(unaReina) ifNil: [ self exterminio: unaHormigaAtacante. ] 							ifNotNil: [ temp:= unaReina pelear: unaHormigaAtacante.													(temp) ifNil: [ ^nil. ] 															ifNotNil: [  																	(temp)																	ifTrue: [self exterminio: unaHormigaAtacante.] 																	ifFalse: [ ^false. ]  ].]																			 ] ifNotNil:  [ temp := unaGuerrera pelear: unaHormigaAtacante. 										(temp) 										ifNil: [ ^nil. ] 										ifNotNil:  [(temp) 											ifTrue: [ self eliminarHormiga: unaGuerrera. ^true. ] 											ifFalse: [ ^false. ] ] 	].! !!Colonia methodsFor: 'as yet unclassified' stamp: 'Infante 6/7/2017 15:51'!exterminio: hormigaEnemigaExterminadora	"comment stating purpose of message"	hormigaEnemigaExterminadora darBotin: unBotin.	miMundo eliminarColonia: self.! !!Colonia methodsFor: 'as yet unclassified' stamp: 'Infante 6/5/2017 14:34'!ejecutarTareas	"comment stating purpose of message"	colHormiga do: [ :hormiga | hormiga ejecutarTarea. ]! !!Colonia methodsFor: 'as yet unclassified' stamp: 'Infante 6/5/2017 14:47'!verificarComida	"comment stating purpose of message"	^unBotin hayComida.! !!Colonia methodsFor: 'as yet unclassified' stamp: 'Infante 6/5/2017 14:50'!restarConsumo: unConsumo	"comment stating purpose of message"	unBotin seComio: unConsumo.! !!Colonia methodsFor: 'as yet unclassified' stamp: 'Infante 6/7/2017 16:44'!crearHormiga	"comment stating purpose of message" |aleatorio obrera guerrera exploradora |	aleatorio := 10 atRandom.		(aleatorio < 4) ifTrue: [ obrera := Obrera crear: self. colHormiga add: obrera. ^true.].	(aleatorio < 7) ifTrue: [ guerrera := Guerrera crear: self. colHormiga add: guerrera. ^true.].	(aleatorio < 9)	ifTrue: [ exploradora := Exploradora crear: self. colHormiga add: exploradora. ^true. ] ifFalse: [ ^false. ].	! !!Colonia methodsFor: 'constructor' stamp: 'Infante 6/7/2017 16:24'!inicializarColonia: unasHormigas botin: unAlimento nombre: unNombre mundo: unMundo	"comment stating purpose of message"	colHormiga := unasHormigas.	unBotin := unAlimento.	nombreColonia := unNombre.	miMundo := unMundo.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Colonia class	instanceVariableNames: ''!!Colonia class methodsFor: 'as yet unclassified' stamp: 'Infante 6/7/2017 16:26'!crearColonia: unNombre hormigas: unasHormigas botin: unAlimento mundo: unMundo	"comment stating purpose of message"	| unaColonia |	unaColonia := Colonia new.	unaColonia inicializarColonia: unasHormigas  botin: unAlimento nombre: unNombre  mundo: unMundo.	^unaColonia.! !Object subclass: #Hormiga	instanceVariableNames: 'nroHormiga consumo miColonia'	classVariableNames: ''	poolDictionaries: ''	category: 'GuerraHormigas'!!Hormiga methodsFor: 'acciones' stamp: 'Infante 6/7/2017 16:10'!esReina	"comment stating purpose of message"	^false.! !!Hormiga methodsFor: 'acciones' stamp: 'Infante 6/5/2017 15:21'!ejecutarTarea	"comment stating purpose of message"	self subclassResponsability.! !!Hormiga methodsFor: 'acciones' stamp: 'Infante 6/7/2017 16:09'!esGuerrera	"comment stating purpose of message"	^false.! !!Hormiga methodsFor: 'acciones' stamp: 'Infante 6/5/2017 16:14'!comer	"comment stating purpose of message"			(miColonia verificarComida) 	ifTrue: [ miColonia restarConsumo: consumo. ^true.] 	ifFalse: [ miColonia eliminarHormiga: self. ^false.].	! !!Hormiga methodsFor: 'constructor' stamp: 'Infante 6/7/2017 17:02'!inicializar: unaColonia	"comment stating purpose of message"	miColonia := unaColonia.	consumo := 1.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Hormiga class	instanceVariableNames: ''!!Hormiga class methodsFor: 'as yet unclassified' stamp: 'Infante 6/8/2017 16:34'!crear: unColonia	"comment stating purpose of message"	| hormiga |	hormiga:= self new.	hormiga inicializar: unColonia.	^hormiga.! !Hormiga subclass: #Exploradora	instanceVariableNames: 'encontroColoniaEnemiga encontroAlimento'	classVariableNames: ''	poolDictionaries: ''	category: 'GuerraHormigas'!!Exploradora methodsFor: 'as yet unclassified' stamp: 'Infante 6/5/2017 15:05'!moverCasilla	"comment stating purpose of message"	! !!Exploradora methodsFor: 'as yet unclassified' stamp: 'Infante 6/5/2017 15:05'!moverCasillaAzar	"comment stating purpose of message"	! !!Exploradora methodsFor: 'as yet unclassified' stamp: 'Infante 6/5/2017 15:05'!verificarEncontrado: unaCasilla	"comment stating purpose of message"	! !!Exploradora methodsFor: 'constructor' stamp: 'Infante 6/7/2017 16:57'!inicializar: unaColonia	"comment stating purpose of message"	super inicializar: unaColonia.	encontroAlimento := false.	encontroColoniaEnemiga := false.	 ! !Hormiga subclass: #HormigaAccion	instanceVariableNames: 'exterior volviendo yendo accionPropia listaCamino'	classVariableNames: ''	poolDictionaries: ''	category: 'GuerraHormigas'!!HormigaAccion methodsFor: 'as yet unclassified' stamp: 'Infante 6/5/2017 15:03'!avanzarCasilla	"comment stating purpose of message"	! !!HormigaAccion methodsFor: 'as yet unclassified' stamp: 'Infante 6/7/2017 17:03'!inicializar: unaColonia	"comment stating purpose of message"	super inicializar: unaColonia.	accionPropia := false.	listaCamino := OrderedCollection new.	yendo:= false.	volviendo := false.	exterior := false.	! !!HormigaAccion methodsFor: 'as yet unclassified' stamp: 'Infante 6/5/2017 15:03'!retrocederCasilla	"comment stating purpose of message"	! !HormigaAccion subclass: #Guerrera	instanceVariableNames: 'botinGanado'	classVariableNames: ''	poolDictionaries: ''	category: 'GuerraHormigas'!!Guerrera methodsFor: 'constructor' stamp: 'Infante 6/7/2017 16:58'!inicializar: unaColonia	"comment stating purpose of message"	super inicializar: unaColonia.	botinGanado := 0.	 ! !!Guerrera methodsFor: 'acciones' stamp: 'Infante 6/7/2017 16:59'!getPoder	"comment stating purpose of message"	| poderAleatorio |	poderAleatorio := 100 atRandom.	^poderAleatorio.! !!Guerrera methodsFor: 'acciones' stamp: 'Infante 6/7/2017 15:12'!darBotin: unBotin	"comment stating purpose of message"	botinGanado := unBotin getCant.	! !!Guerrera methodsFor: 'acciones' stamp: 'Infante 6/7/2017 16:10'!esGuerrera	"comment stating purpose of message"	^true.! !!Guerrera methodsFor: 'acciones' stamp: 'Infante 6/7/2017 16:13'!resetBotinGanado	"comment stating purpose of message"	botinGanado := 0.! !!Guerrera methodsFor: 'acciones' stamp: 'Infante 6/7/2017 15:55'!pelear: guerreraAtacante	"comment stating purpose of message"	|otroPoder unPoder|		unPoder := self getPoder.	otroPoder := guerreraAtacante getPoder.		(unPoder = otroPoder) ifTrue: [ ^nil. ] ifFalse: [ ^(unPoder < otroPoder). ].! !!Guerrera methodsFor: 'acciones' stamp: 'Infante 6/7/2017 15:14'!dejarBotin	"comment stating purpose of message"		miColonia ! !!Guerrera methodsFor: 'acciones' stamp: 'Infante 6/7/2017 16:13'!dejarComida	"comment stating purpose of message"	miColonia depositarComida: botinGanado.		self resetBotinGanado.	! !Object subclass: #Mundo	instanceVariableNames: 'nombreMundo colCasilla colColonia colAlimento'	classVariableNames: ''	poolDictionaries: ''	category: 'GuerraHormigas'!!Mundo methodsFor: 'as yet unclassified' stamp: 'Infante 6/5/2017 14:33'!ejecutarMundo	"comment stating purpose of message"	colColonia do: [ :colonia | colonia ejecutarTareas. ]! !!Mundo methodsFor: 'as yet unclassified' stamp: 'Infante 6/7/2017 15:52'!eliminarColonia: unaColonia	"comment stating purpose of message"	colColonia remove: unaColonia.! !HormigaAccion subclass: #Obrera	instanceVariableNames: 'cantAlimentoLlevado llegoHormiguero unaCasilla llegoAlimento'	classVariableNames: ''	poolDictionaries: ''	category: 'GuerraHormigas'!!Obrera methodsFor: 'as yet unclassified' stamp: 'Infante 6/5/2017 18:46'!recogerComida	"comment stating purpose of message"	volviendo := true.	llegoAlimento := false.			(unaCasilla hayComidaDisponible) 	ifTrue: [|unaCant| unaCant:= unaCasilla sacarComida. cantAlimentoLlevado := unaCant.] 	ifFalse: [accionPropia  := false.]! !!Obrera methodsFor: 'as yet unclassified' stamp: 'Infante 6/7/2017 15:58'!dejarComida	"comment stating purpose of message"	miColonia depositarComida: cantAlimentoLlevado.		self resetAlimentoLlevado.	! !!Obrera methodsFor: 'as yet unclassified' stamp: 'Infante 6/7/2017 15:16'!resetAlimentoLlevado	"comment stating purpose of message"	cantAlimentoLlevado := 0.! !!Obrera methodsFor: 'constructor' stamp: 'Infante 6/7/2017 17:01'!inicializar: unaColonia	"comment stating purpose of message"	super inicializar: unaColonia.	cantAlimentoLlevado := 0.	llegoAlimento := false.	llegoHormiguero := false.! !Object subclass: #Posicion	instanceVariableNames: 'posX posY'	classVariableNames: ''	poolDictionaries: ''	category: 'GuerraHormigas'!!Posicion methodsFor: 'as yet unclassified' stamp: 'Infante 6/5/2017 18:32'!getX	"comment stating purpose of message"	^posX.! !!Posicion methodsFor: 'as yet unclassified' stamp: 'Infante 6/5/2017 18:32'!getY	"comment stating purpose of message"	^posY.! !!Posicion methodsFor: 'as yet unclassified' stamp: 'Infante 6/5/2017 18:30'!inicializarX: unaX y: unaY	"comment stating purpose of message"	posX := unaX.	posY:= unaY.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Posicion class	instanceVariableNames: ''!!Posicion class methodsFor: 'as yet unclassified' stamp: 'Infante 6/5/2017 18:31'!crearX: unaX y: unaY	"comment stating purpose of message"	| posicion |	posicion := Posicion new.	posicion inicializarX: unaX y: unaY.	^posicion.! !Hormiga subclass: #Reina	instanceVariableNames: 'poderGolpe cantConsumida'	classVariableNames: 'cant_max'	poolDictionaries: ''	category: 'GuerraHormigas'!!Reina methodsFor: 'as yet unclassified' stamp: 'Infante 6/7/2017 16:11'!getPoder	"comment stating purpose of message"	| poderAleatorio |	poderAleatorio := 100 atRandom.	poderGolpe := poderAleatorio.	^poderAleatorio.! !!Reina methodsFor: 'as yet unclassified' stamp: 'Infante 6/5/2017 15:20'!ejecutarTarea	"comment stating purpose of message"	self comeRealeza.	(cantConsumida == cant_max) ifTrue: [ miColonia crearHormiga. ^true.]! !!Reina methodsFor: 'as yet unclassified' stamp: 'Infante 6/7/2017 15:14'!comeRealeza	"comment stating purpose of message"		(self comer) ifTrue: [ cantConsumida :=  cantConsumida  + 1 ]	! !!Reina methodsFor: 'as yet unclassified' stamp: 'Infante 6/7/2017 16:11'!esReina	"comment stating purpose of message"	^true.! !!Reina methodsFor: 'constructor' stamp: 'Infante 6/7/2017 17:05'!inicializar: unaColoniasuper inicializar: unaColonia.! !Object subclass: #Simulacion	instanceVariableNames: 'unMundo nroSimulacion'	classVariableNames: ''	poolDictionaries: ''	category: 'GuerraHormigas'!!Simulacion methodsFor: 'as yet unclassified' stamp: 'Infante 6/5/2017 14:31'!ejecutarTurno	"comment stating purpose of message"	unMundo ejecutarMundo.	! !